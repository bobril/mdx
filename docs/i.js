(function(e){"use strict";var t=function(e){if(!("default"in e))return e;var t=e.default;if(typeof t==="object"||typeof t==="function"){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&o!=="default"&&(t[o]=e[o])}return t};var o=__bbb.bc;var n=__bbb.cc;var a=__bbb.Mb;var i=__bbb.dc;var d=__bbb.Nb;var s=function(){var n={};var a={exports:n};(function e(t,i){if(typeof n==="object"&&typeof a==="object")a.exports=i(o);else if(typeof define==="function"&&define.amd)define(["cose-base"],i);else if(typeof n==="object")n["cytoscapeCoseBilkent"]=i(o);else t["cytoscapeCoseBilkent"]=i(t["coseBase"])})(this,function(t){return function(e){var t={};function o(n){if(t[n]){return t[n].exports}var a=t[n]={i:n,l:!1,exports:{}};e[n].call(a.exports,a,a.exports,o);a.l=!0;return a.exports}o.m=e;o.c=t;o.i=function(e){return e};o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})};o.n=function(e){var t=e&&e.__esModule?function t(){return e["default"]}:function t(){return e};o.d(t,"a",t);return t};o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)};o.p="";return o(o.s=1)}([function(e,o){e.exports=t},function(t,o,n){"use strict";var a=n(0).layoutBase.LayoutConstants;var i=n(0).layoutBase.FDLayoutConstants;var d=n(0).CoSEConstants;var s=n(0).CoSELayout;var r=n(0).CoSENode;var l=n(0).layoutBase.PointD;var u=n(0).layoutBase.DimensionD;var _={ready:function e(){},stop:function e(){},quality:"default",nodeDimensionsIncludeLabels:!1,refresh:30,fit:!0,padding:10,randomize:!0,nodeRepulsion:4500,idealEdgeLength:50,edgeElasticity:.45,nestingFactor:.1,gravity:.25,numIter:2500,tile:!0,animate:"end",animationDuration:500,tilingPaddingVertical:10,tilingPaddingHorizontal:10,gravityRangeCompound:1.5,gravityCompound:1,gravityRange:3.8,initialEnergyOnIncremental:.5};function c(e,t){var o={};for(var n in e){o[n]=e[n]}for(var n in t){o[n]=t[n]}return o}function p(e){this.options=c(_,e);g(this.options)}var g=function e(t){t.nodeRepulsion!=null&&(d.DEFAULT_REPULSION_STRENGTH=i.DEFAULT_REPULSION_STRENGTH=t.nodeRepulsion);t.idealEdgeLength!=null&&(d.DEFAULT_EDGE_LENGTH=i.DEFAULT_EDGE_LENGTH=t.idealEdgeLength);t.edgeElasticity!=null&&(d.DEFAULT_SPRING_STRENGTH=i.DEFAULT_SPRING_STRENGTH=t.edgeElasticity);t.nestingFactor!=null&&(d.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR=i.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR=t.nestingFactor);t.gravity!=null&&(d.DEFAULT_GRAVITY_STRENGTH=i.DEFAULT_GRAVITY_STRENGTH=t.gravity);t.numIter!=null&&(d.MAX_ITERATIONS=i.MAX_ITERATIONS=t.numIter);t.gravityRange!=null&&(d.DEFAULT_GRAVITY_RANGE_FACTOR=i.DEFAULT_GRAVITY_RANGE_FACTOR=t.gravityRange);t.gravityCompound!=null&&(d.DEFAULT_COMPOUND_GRAVITY_STRENGTH=i.DEFAULT_COMPOUND_GRAVITY_STRENGTH=t.gravityCompound);t.gravityRangeCompound!=null&&(d.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR=i.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR=t.gravityRangeCompound);t.initialEnergyOnIncremental!=null&&(d.DEFAULT_COOLING_FACTOR_INCREMENTAL=i.DEFAULT_COOLING_FACTOR_INCREMENTAL=t.initialEnergyOnIncremental);if(t.quality=="draft")a.QUALITY=0;else if(t.quality=="proof")a.QUALITY=2;else a.QUALITY=1;d.NODE_DIMENSIONS_INCLUDE_LABELS=i.NODE_DIMENSIONS_INCLUDE_LABELS=a.NODE_DIMENSIONS_INCLUDE_LABELS=t.nodeDimensionsIncludeLabels;d.DEFAULT_INCREMENTAL=i.DEFAULT_INCREMENTAL=a.DEFAULT_INCREMENTAL=!t.randomize;d.ANIMATE=i.ANIMATE=a.ANIMATE=t.animate;d.TILE=t.tile;d.TILING_PADDING_VERTICAL=typeof t.tilingPaddingVertical==="function"?t.tilingPaddingVertical.call():t.tilingPaddingVertical;d.TILING_PADDING_HORIZONTAL=typeof t.tilingPaddingHorizontal==="function"?t.tilingPaddingHorizontal.call():t.tilingPaddingHorizontal};p.prototype.run=function(){var t;var o;var n=this.options;this.idToLNode={};var a=this.layout=new s;var i=this;i.stopped=!1;this.cy=this.options.cy;this.cy.trigger({type:"layoutstart",layout:this});var d=a.newGraphManager();this.gm=d;var r=this.options.eles.nodes();var l=this.options.eles.edges();this.root=d.addRoot();this.processChildrenList(this.root,this.getTopMostNodes(r),a);for(var u=0;u<l.length;u++){var _=l[u],c=this.idToLNode[_.data("source")],p=this.idToLNode[_.data("target")];if(c!==p&&c.getEdgesBetween(p).length==0){var g=d.add(a.newEdge(),c,p);g.id=_.id()}}var y=function e(t,o){typeof t==="number"&&(t=o);var n=t.data("id");var a=i.idToLNode[n];return{x:a.getRect().getCenterX(),y:a.getRect().getCenterY()}};var h=function d(){var s=function e(){n.fit&&n.cy.fit(n.eles,n.padding);if(!t){t=!0;i.cy.one("layoutready",n.ready);i.cy.trigger({type:"layoutready",layout:i})}};var r=i.options.refresh;var l;for(var u=0;u<r&&!l;u++){l=i.stopped||i.layout.tick()}if(l){a.checkLayoutSuccess()&&!a.isSubLayout&&a.doPostLayout();a.tilingPostLayout&&a.tilingPostLayout();a.isLayoutFinished=!0;i.options.eles.nodes().positions(y);s();i.cy.one("layoutstop",i.options.stop);i.cy.trigger({type:"layoutstop",layout:i});o&&cancelAnimationFrame(o);t=!1;return}var _=i.layout.getPositionsData();n.eles.nodes().positions(function(t,o){typeof t==="number"&&(t=o);if(!t.isParent()){var n=t.id(),a=_[n],i=t;while(a==null){a=_[i.data("parent")]||_["DummyCompound_"+i.data("parent")];_[n]=a;i=i.parent()[0];if(i==e){break}}if(a!=null){return{x:a.x,y:a.y}}else{return{x:t.position("x"),y:t.position("y")}}}});s();o=requestAnimationFrame(d)};a.addListener("layoutstarted",function(){i.options.animate==="during"&&(o=requestAnimationFrame(h))});a.runLayout();if(this.options.animate!=="during"){i.options.eles.nodes().not(":parent").layoutPositions(i,i.options,y);t=!1}return this};p.prototype.getTopMostNodes=function(e){var t={};for(var o=0;o<e.length;o++){t[e[o].id()]=!0}var n=e.filter(function(e,o){typeof e==="number"&&(e=o);var n=e.parent()[0];while(n!=null){if(t[n.id()]){return!1}n=n.parent()[0]}return!0});return n};p.prototype.processChildrenList=function(e,t,o){var n=t.length;for(var a=0;a<n;a++){var i=t[a],d=i.children(),s,_=i.layoutDimensions({nodeDimensionsIncludeLabels:this.options.nodeDimensionsIncludeLabels});if(i.outerWidth()!=null&&i.outerHeight()!=null){s=e.add(new r(o.graphManager,new l(i.position("x")-_.w/2,i.position("y")-_.h/2),new u(parseFloat(_.w),parseFloat(_.h))))}else{s=e.add(new r(this.graphManager))}s.id=i.data("id");s.paddingLeft=parseInt(i.css("padding"));s.paddingTop=parseInt(i.css("padding"));s.paddingRight=parseInt(i.css("padding"));s.paddingBottom=parseInt(i.css("padding"));if(this.options.nodeDimensionsIncludeLabels){if(i.isParent()){var c=i.boundingBox({includeLabels:!0,includeNodes:!1}).w,p=i.boundingBox({includeLabels:!0,includeNodes:!1}).h,g=i.css("text-halign");s.labelWidth=c;s.labelHeight=p;s.labelPos=g}}this.idToLNode[i.data("id")]=s;isNaN(s.rect.x)&&(s.rect.x=0);isNaN(s.rect.y)&&(s.rect.y=0);if(d!=null&&d.length>0){var y;y=o.getGraphManager().add(o.newGraph(),s);this.processChildrenList(y,d,o)}}};p.prototype.stop=function(){this.stopped=!0;return this};var y=function e(t){t("layout","cose-bilkent",p)};typeof cytoscape!=="undefined"&&y(cytoscape);t.exports=y}])});return t(a.exports)}.call(window);n.use(s);function r(e,t){e.forEach(e=>{var o,n,a;const i={id:e.id,labelText:e.label,height:e.height,width:e.width,padding:(o=e.padding)!==null&&o!==void 0?o:0};Object.keys(e).forEach(t=>{["id","label","height","width","padding","x","y"].includes(t)||(i[t]=e[t])});t.add({group:"nodes",data:i,position:{x:(n=e.x)!==null&&n!==void 0?n:0,y:(a=e.y)!==null&&a!==void 0?a:0}})})}a(r,"addNodes");function l(e,t){e.forEach(e=>{const o={id:e.id,source:e.start,target:e.end};Object.keys(e).forEach(t=>{["id","start","end"].includes(t)||(o[t]=e[t])});t.add({group:"edges",data:o})})}a(l,"addEdges");function u(e){return new Promise(t=>{const o=i("body").append("div").attr("id","cy").attr("style","display:none");const a=n({container:document.getElementById("cy"),style:[{selector:"edge",style:{"curve-style":"bezier"}}]});o.remove();r(e.nodes,a);l(e.edges,a);a.nodes().forEach(function(e){e.layoutDimensions=(()=>{const t=e.data();return{w:t.width,h:t.height}})});const s={name:"cose-bilkent",quality:"proof",styleEnabled:!1,animate:!1};a.layout(s).run();a.ready(e=>{d.info("Cytoscape ready",e);t(a)})})}a(u,"createCytoscapeInstance");function _(e){return e.nodes().map(e=>{const t=e.data();const o=e.position();const n={id:t.id,x:o.x,y:o.y};Object.keys(t).forEach(e=>{e!=="id"&&(n[e]=t[e])});return n})}a(_,"extractPositionedNodes");function c(e){return e.edges().map(e=>{const t=e.data();const o=e._private.rscratch;const n={id:t.id,source:t.source,target:t.target,startX:o.startX,startY:o.startY,midX:o.midX,midY:o.midY,endX:o.endX,endY:o.endY};Object.keys(t).forEach(e=>{["id","source","target"].includes(e)||(n[e]=t[e])});return n})}a(c,"extractPositionedEdges");async function p(e,t){d.debug("Starting cose-bilkent layout algorithm");try{g(e);let t=await u(e),o=_(t),n=c(t);d.debug(`Layout completed: ${o.length} nodes, ${n.length} edges`);return{nodes:o,edges:n}}catch(e){d.error("Error in cose-bilkent layout algorithm:",e);throw e}}a(p,"executeCoseBilkentLayout");function g(e){if(!e){throw new Error("Layout data is required")}if(!e.config){throw new Error("Configuration is required in layout data")}if(!e.rootNode){throw new Error("Root node is required")}if(!e.nodes||!Array.isArray(e.nodes)){throw new Error("No nodes found in layout data")}if(!Array.isArray(e.edges)){throw new Error("Edges array is required in layout data")}return!0}a(g,"validateLayoutData");var y=a(async(e,t,{insertCluster:o,insertEdge:n,insertEdgeLabel:a,insertMarkers:i,insertNode:d,log:s,positionEdgeLabel:r},{algorithm:l})=>{const u={};const _={};const c=t.select("g");i(c,e.markers,e.type,e.diagramId);const g=c.insert("g").attr("class","subgraphs");const y=c.insert("g").attr("class","edgePaths");const h=c.insert("g").attr("class","edgeLabels");const E=c.insert("g").attr("class","nodes");s.debug("Inserting nodes into DOM for dimension calculation");await Promise.all(e.nodes.map(async t=>{if(t.isGroup){let e={...t};_[t.id]=e;u[t.id]=e;await o(g,t)}else{let o={...t};u[t.id]=o;let n=await d(E,t,{config:e.config,dir:e.direction||"TB"}),a=n.node().getBBox();o.width=a.width;o.height=a.height;o.domId=n;s.debug(`Node ${t.id} dimensions: ${a.width}x${a.height}`)}}));s.debug("Running cose-bilkent layout algorithm");const f={...e,nodes:e.nodes.map(e=>{const t=u[e.id];return{...e,width:t.width,height:t.height}})};const m=await p(f,e.config);s.debug("Positioning nodes based on layout results");m.nodes.forEach(e=>{const t=u[e.id];if(t===null||t===void 0?void 0:t.domId){t.domId.attr("transform",`translate(${e.x}, ${e.y})`);t.x=e.x;t.y=e.y;s.debug(`Positioned node ${t.id} at center (${e.x}, ${e.y})`)}});m.edges.forEach(t=>{const o=e.edges.find(e=>e.id===t.id);o&&(o.points=[{x:t.startX,y:t.startY},{x:t.midX,y:t.midY},{x:t.endX,y:t.endY}])});s.debug("Inserting and positioning edges");await Promise.all(e.edges.map(async t=>{var o,i;await a(h,t);const d=u[(o=t.start)!==null&&o!==void 0?o:""];const l=u[(i=t.end)!==null&&i!==void 0?i:""];if(d&&l){let o=m.edges.find(e=>e.id===t.id);if(o){s.debug("APA01 positionedEdge",o);let a={...t},i=n(y,a,_,e.type,d,l,e.diagramId);r(a,i)}else{let o={...t,points:[{x:d.x||0,y:d.y||0},{x:l.x||0,y:l.y||0}]},a=n(y,o,_,e.type,d,l,e.diagramId);r(o,a)}}}));s.debug("Cose-bilkent rendering completed")},"render");var h={render:y};__bbb.h=h}).call(this)