(function(e){"use strict";var t=function(e,t,a){typeof t==="symbol"&&(t=t.description?"[".concat(t.description,"]"):"");return Object.defineProperty(e,"name",{configurable:!0,value:a?"".concat(a," ",t):t})};var a=__bbb.hc;var l=__bbb.ic;var n=__bbb.tc;var i=__bbb.uc;var s=__bbb.jc;var r=__bbb.kc;var o=__bbb.fd;var c=__bbb.dd;var d=__bbb.ed;var _=__bbb.Ce;var u=__bbb.Ac;var h=__bbb.Mb;var m=__bbb.id;var p=__bbb.jd;var b=__bbb.Nb;var g=__bbb.Id;var S=__bbb.sc;var f=__bbb.De;var v=__bbb.Md;var y=__bbb.Ee;var x=__bbb.Fe;var F=__bbb.Ge;var C=__bbb.dc;var T=__bbb.Fc;var V;var A=(V=class{constructor(){this.nodes=[];this.levels=new Map;this.outerNodes=[];this.classes=new Map;this.setAccTitle=a;this.getAccTitle=l;this.setDiagramTitle=n;this.getDiagramTitle=i;this.getAccDescription=s;this.setAccDescription=r}getNodes(){return this.nodes}getConfig(){var e;const t=d;const a=o();return c({...d.treemap,...(e=a.treemap)!==null&&e!==void 0?e:{}})}addNode(e,t){var a;this.nodes.push(e);this.levels.set(e,t);if(t===0){this.outerNodes.push(e);(a=this.root)!==null&&a!==void 0?a:this.root=e}}getRoot(){return{name:"",children:this.outerNodes}}addClass(e,t){var a;const l=(a=this.classes.get(e))!==null&&a!==void 0?a:{id:e,styles:[],textStyles:[]};const n=t.replace(/\\,/g,"§§§").replace(/,/g,";").replace(/§§§/g,",").split(";");if(n){n.forEach(e=>{if(_(e)){if(l===null||l===void 0?void 0:l.textStyles){l.textStyles.push(e)}else{l.textStyles=[e]}}if(l===null||l===void 0?void 0:l.styles){l.styles.push(e)}else{l.styles=[e]}})}this.classes.set(e,l)}getClasses(){return this.classes}getStylesForClass(e){var t,a;return(a=(t=this.classes.get(e))===null||t===void 0?void 0:t.styles)!==null&&a!==void 0?a:[]}clear(){u();this.nodes=[];this.levels=new Map;this.outerNodes=[];this.classes=new Map;this.root=void 0}},t(V,"TreeMapDB"),(()=>{h(V,"TreeMapDB")})(),V);function k(e){if(!e.length){return[]}const t=[];const a=[];e.forEach(e=>{const l={name:e.name,children:e.type==="Leaf"?void 0:[]};l.classSelector=e===null||e===void 0?void 0:e.classSelector;(e===null||e===void 0?void 0:e.cssCompiledStyles)&&(l.cssCompiledStyles=[e.cssCompiledStyles]);e.type==="Leaf"&&e.value!==void 0&&(l.value=e.value);while(a.length>0&&a[a.length-1].level>=e.level){a.pop()}if(a.length===0){t.push(l)}else{let e=a[a.length-1].node;if(e.children){e.children.push(l)}else{e.children=[l]}}e.type!=="Leaf"&&a.push({node:l,level:e.level})});return t}h(k,"buildHierarchy");var N=h((e,t)=>{var a,l,n,i;m(e,t);const s=[];for(const i of(a=e.TreemapRows)!==null&&a!==void 0?a:[]){i.$type==="ClassDefStatement"&&t.addClass((l=i.className)!==null&&l!==void 0?l:"",(n=i.styleText)!==null&&n!==void 0?n:"")}for(const a of(i=e.TreemapRows)!==null&&i!==void 0?i:[]){let e=a.item;if(!e){continue}let l=a.indent?parseInt(a.indent):0,n=D(e),i=e.classSelector?t.getStylesForClass(e.classSelector):[],r=i.length>0?i.join(";"):void 0,o={level:l,name:n,type:e.$type,value:e.value,classSelector:e.classSelector,cssCompiledStyles:r};s.push(o)}const r=k(s);const o=h((e,a)=>{for(const l of e){t.addNode(l,a);l.children&&l.children.length>0&&o(l.children,a+1)}},"addNodesRecursively");o(r,0)},"populate");var D=h(e=>e.name?String(e.name):"","getItemName");var E={parser:{yy:void 0},parse:h(async e=>{var t;try{let a=p,l=await a("treemap",e);b.debug("Treemap AST:",l);let n=(t=E.parser)===null||t===void 0?void 0:t.yy;if(!(n instanceof A)){throw new Error("parser.parser?.yy was not a TreemapDB. This is due to a bug within Mermaid, please report this issue at https://github.com/mermaid-js/mermaid/issues.")}N(l,n)}catch(e){b.error("Error parsing treemap:",e);throw e}},"parse")};var L=10;var H=10;var w=25;var B=h((e,t,a,l)=>{var n,i;const s=l.db;const r=s.getConfig();const c=(n=r.padding)!==null&&n!==void 0?n:L;const d=s.getDiagramTitle();const _=s.getRoot();const{themeVariables:u}=o();if(!_){return}const m=d?30:0;const p=g(t);const V=r.nodeWidth?r.nodeWidth*H:960;const A=r.nodeHeight?r.nodeHeight*H:500;const k=A+m;p.attr("viewBox",`0 0 ${V} ${k}`);S(p,k,V,r.useMaxWidth);let N;try{let e=r.valueFormat||",";if(e==="$0,0"){N=h(e=>"$"+f(",")(e),"valueFormat")}else if(e.startsWith("$")&&e.includes(",")){let t=/\.\d+/.exec(e),a=t?t[0]:"";N=h(e=>"$"+f(","+a)(e),"valueFormat")}else if(e.startsWith("$")){let t=e.substring(1);N=h(e=>"$"+f(t||"")(e),"valueFormat")}else{N=f(e)}}catch(e){b.error("Error creating format function:",e);N=f(",")}const D=v().range(["transparent",u.cScale0,u.cScale1,u.cScale2,u.cScale3,u.cScale4,u.cScale5,u.cScale6,u.cScale7,u.cScale8,u.cScale9,u.cScale10,u.cScale11]);const E=v().range(["transparent",u.cScalePeer0,u.cScalePeer1,u.cScalePeer2,u.cScalePeer3,u.cScalePeer4,u.cScalePeer5,u.cScalePeer6,u.cScalePeer7,u.cScalePeer8,u.cScalePeer9,u.cScalePeer10,u.cScalePeer11]);const B=v().range([u.cScaleLabel0,u.cScaleLabel1,u.cScaleLabel2,u.cScaleLabel3,u.cScaleLabel4,u.cScaleLabel5,u.cScaleLabel6,u.cScaleLabel7,u.cScaleLabel8,u.cScaleLabel9,u.cScaleLabel10,u.cScaleLabel11]);d&&p.append("text").attr("x",V/2).attr("y",m/2).attr("class","treemapTitle").attr("text-anchor","middle").attr("dominant-baseline","middle").text(d);const z=p.append("g").attr("transform",`translate(0, ${m})`).attr("class","treemapContainer");const R=y(_).sum(e=>{var t;return(t=e.value)!==null&&t!==void 0?t:0}).sort((e,t)=>{var a,l;return((a=t.value)!==null&&a!==void 0?a:0)-((l=e.value)!==null&&l!==void 0?l:0)});const I=x().size([V,A]).paddingTop(e=>e.children&&e.children.length>0?w+H:0).paddingInner(c).paddingLeft(e=>e.children&&e.children.length>0?H:0).paddingRight(e=>e.children&&e.children.length>0?H:0).paddingBottom(e=>e.children&&e.children.length>0?H:0).round(!0);const $=I(R);const P=$.descendants().filter(e=>e.children&&e.children.length>0);const J=z.selectAll(".treemapSection").data(P).enter().append("g").attr("class","treemapSection").attr("transform",e=>`translate(${e.x0},${e.y0})`);J.append("rect").attr("width",e=>e.x1-e.x0).attr("height",w).attr("class","treemapSectionHeader").attr("fill","none").attr("fill-opacity",.6).attr("stroke-width",.6).attr("style",e=>{if(e.depth===0){return"display: none;"}return""});J.append("clipPath").attr("id",(e,a)=>`clip-section-${t}-${a}`).append("rect").attr("width",e=>Math.max(0,e.x1-e.x0-12)).attr("height",w);J.append("rect").attr("width",e=>e.x1-e.x0).attr("height",e=>e.y1-e.y0).attr("class",(e,t)=>`treemapSection section${t}`).attr("fill",e=>D(e.data.name)).attr("fill-opacity",.6).attr("stroke",e=>E(e.data.name)).attr("stroke-width",2).attr("stroke-opacity",.4).attr("style",e=>{if(e.depth===0){return"display: none;"}const t=F({cssCompiledStyles:e.data.cssCompiledStyles});return t.nodeStyles+";"+t.borderStyles.join(";")});J.append("text").attr("class","treemapSectionLabel").attr("x",6).attr("y",w/2).attr("dominant-baseline","middle").text(e=>e.depth===0?"":e.data.name).attr("font-weight","bold").attr("style",e=>{if(e.depth===0){return"display: none;"}const t="dominant-baseline: middle; font-size: 12px; fill:"+B(e.data.name)+"; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;";const a=F({cssCompiledStyles:e.data.cssCompiledStyles});return t+a.labelStyles.replace("color:","fill:")}).each(function(e){if(e.depth===0){return}const t=C(this);const a=e.data.name;t.text(a);const l=e.x1-e.x0;const n=6;let i;if(r.showValues!==!1&&e.value){let e=l-10,t=30,a=10,s=e-t-a;i=s-n}else{let e=6;i=l-n-e}const s=15;const o=Math.max(s,i);const c=t.node();const d=c.getComputedTextLength();if(d>o){let e="...",l=a;while(l.length>0){l=a.substring(0,l.length-1);if(l.length===0){t.text(e);c.getComputedTextLength()>o&&t.text("");break}t.text(l+e);if(c.getComputedTextLength()<=o){break}}}});r.showValues!==!1&&J.append("text").attr("class","treemapSectionValue").attr("x",e=>e.x1-e.x0-10).attr("y",w/2).attr("text-anchor","end").attr("dominant-baseline","middle").text(e=>e.value?N(e.value):"").attr("font-style","italic").attr("style",e=>{if(e.depth===0){return"display: none;"}const t="text-anchor: end; dominant-baseline: middle; font-size: 10px; fill:"+B(e.data.name)+"; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;";const a=F({cssCompiledStyles:e.data.cssCompiledStyles});return t+a.labelStyles.replace("color:","fill:")});const Y=$.leaves();const G=z.selectAll(".treemapLeafGroup").data(Y).enter().append("g").attr("class",(e,t)=>`treemapNode treemapLeafGroup leaf${t}${e.data.classSelector?` ${e.data.classSelector}`:""}x`).attr("transform",e=>`translate(${e.x0},${e.y0})`);G.append("rect").attr("width",e=>e.x1-e.x0).attr("height",e=>e.y1-e.y0).attr("class","treemapLeaf").attr("fill",e=>e.parent?D(e.parent.data.name):D(e.data.name)).attr("style",e=>{const t=F({cssCompiledStyles:e.data.cssCompiledStyles});return t.nodeStyles}).attr("fill-opacity",.3).attr("stroke",e=>e.parent?D(e.parent.data.name):D(e.data.name)).attr("stroke-width",3);G.append("clipPath").attr("id",(e,a)=>`clip-${t}-${a}`).append("rect").attr("width",e=>Math.max(0,e.x1-e.x0-4)).attr("height",e=>Math.max(0,e.y1-e.y0-4));const W=G.append("text").attr("class","treemapLabel").attr("x",e=>(e.x1-e.x0)/2).attr("y",e=>(e.y1-e.y0)/2).attr("style",e=>{const t="text-anchor: middle; dominant-baseline: middle; font-size: 38px;fill:"+B(e.data.name)+";";const a=F({cssCompiledStyles:e.data.cssCompiledStyles});return t+a.labelStyles.replace("color:","fill:")}).attr("clip-path",(e,a)=>`url(#clip-${t}-${a})`).text(e=>e.data.name);W.each(function(e){const t=C(this);const a=e.x1-e.x0;const l=e.y1-e.y0;const n=t.node();const i=4;const s=a-2*i;const r=l-2*i;if(s<10||r<10){t.style("display","none");return}let o=parseInt(t.style("font-size"),10);const c=8;const d=28;const _=.6;const u=6;const h=2;while(n.getComputedTextLength()>s&&o>c){o--;t.style("font-size",`${o}px`)}let m=Math.max(u,Math.min(d,Math.round(o*_)));let p=o+h+m;while(p>r&&o>c){o--;m=Math.max(u,Math.min(d,Math.round(o*_)));if(m<u&&o===c){break}t.style("font-size",`${o}px`);p=o+h+m}t.style("font-size",`${o}px`);(n.getComputedTextLength()>s||o<c||r<o)&&t.style("display","none")});if(r.showValues!==!1){let e=G.append("text").attr("class","treemapValue").attr("x",e=>(e.x1-e.x0)/2).attr("y",function(e){return(e.y1-e.y0)/2}).attr("style",e=>{const t="text-anchor: middle; dominant-baseline: hanging; font-size: 28px;fill:"+B(e.data.name)+";";const a=F({cssCompiledStyles:e.data.cssCompiledStyles});return t+a.labelStyles.replace("color:","fill:")}).attr("clip-path",(e,a)=>`url(#clip-${t}-${a})`).text(e=>e.value?N(e.value):"");e.each(function(e){const t=C(this);const a=this.parentNode;if(!a){t.style("display","none");return}const l=C(a).select(".treemapLabel");if(l.empty()||l.style("display")==="none"){t.style("display","none");return}const n=parseFloat(l.style("font-size"));const i=28;const s=.6;const r=6;const o=2;const c=Math.max(r,Math.min(i,Math.round(n*s)));t.style("font-size",`${c}px`);const d=(e.y1-e.y0)/2;const _=d+n/2+o;t.attr("y",_);const u=e.x1-e.x0;const h=e.y1-e.y0;const m=4;const p=h-m;const b=u-2*4;if(t.node().getComputedTextLength()>b||_+c>p||c<r){t.style("display","none")}else{t.style("display",null)}})}const M=(i=r.diagramPadding)!==null&&i!==void 0?i:8;T(p,M,"flowchart",(r===null||r===void 0?void 0:r.useMaxWidth)||!1)},"draw");var z=h(function(e,t){return t.db.getClasses()},"getClasses");var R={draw:B,getClasses:z};var I={sectionStrokeColor:"black",sectionStrokeWidth:"1",sectionFillColor:"#efefef",leafStrokeColor:"black",leafStrokeWidth:"1",leafFillColor:"#efefef",labelColor:"black",labelFontSize:"12px",valueFontSize:"10px",valueColor:"black",titleColor:"black",titleFontSize:"14px"};var $=h(({treemap:e}={})=>{const t=c(I,e);return`\n  .treemapNode.section {\n    stroke: ${t.sectionStrokeColor};\n    stroke-width: ${t.sectionStrokeWidth};\n    fill: ${t.sectionFillColor};\n  }\n  .treemapNode.leaf {\n    stroke: ${t.leafStrokeColor};\n    stroke-width: ${t.leafStrokeWidth};\n    fill: ${t.leafFillColor};\n  }\n  .treemapLabel {\n    fill: ${t.labelColor};\n    font-size: ${t.labelFontSize};\n  }\n  .treemapValue {\n    fill: ${t.valueColor};\n    font-size: ${t.valueFontSize};\n  }\n  .treemapTitle {\n    fill: ${t.titleColor};\n    font-size: ${t.titleFontSize};\n  }\n  `},"getStyles");var P={parser:E,get db(){return new A},renderer:R,styles:$};var J={diagram:P};__bbb.W=J}).call(this)