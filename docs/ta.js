(function(t){"use strict";var e=function(t,e,r){typeof e==="symbol"&&(e=e.description?"[".concat(e.description,"]"):"");return Object.defineProperty(t,"name",{configurable:!0,value:r?"".concat(r," ",e):e})};var r=__bbb.hc;var a=__bbb.ic;var o=__bbb.tc;var i=__bbb.uc;var n=__bbb.jc;var s=__bbb.kc;var c=__bbb.dd;var l=__bbb.ed;var _=__bbb.fd;var d=__bbb.Ac;var b=__bbb.Mb;var k=__bbb.id;var g=__bbb.Nb;var h=__bbb.jd;var p=__bbb.Id;var u=__bbb.sc;var w;var B=l.packet;var v=(w=class{constructor(){this.packet=[];this.setAccTitle=r;this.getAccTitle=a;this.setDiagramTitle=o;this.getDiagramTitle=i;this.getAccDescription=n;this.setAccDescription=s}getConfig(){const t=c({...B,..._().packet});if(t.showBits){t.paddingY+=10}return t}getPacket(){return this.packet}pushWord(t){if(t.length>0){this.packet.push(t)}}clear(){d();this.packet=[]}},e(w,"PacketDB"),(()=>{b(w,"PacketDB")})(),w);var f=1e4;var m=b((t,e)=>{k(t,e);let r=-1;let a=[];let o=1;const{bitsPerRow:i}=e.getConfig();for(let{start:n,end:s,bits:c,label:l}of t.blocks){if(n!==void 0&&s!==void 0&&s<n){throw new Error(`Packet block ${n} - ${s} is invalid. End must be greater than start.`)}n!==null&&n!==void 0?n:n=r+1;if(n!==r+1){throw new Error(`Packet block ${n} - ${s!==null&&s!==void 0?s:n} is not contiguous. It should start from ${r+1}.`)}if(c===0){throw new Error(`Packet block ${n} is invalid. Cannot have a zero bit field.`)}s!==null&&s!==void 0?s:s=n+(c!==null&&c!==void 0?c:1)-1;c!==null&&c!==void 0?c:c=s-n+1;r=s;g.debug(`Packet block ${n} - ${r} with label ${l}`);while(a.length<=i+1&&e.getPacket().length<f){let[t,r]=A({start:n,end:s,bits:c,label:l},o,i);a.push(t);if(t.end+1===o*i){e.pushWord(a);a=[];o++}if(!r){break}({start:n,end:s,bits:c,label:l}=r)}}e.pushWord(a)},"populate");var A=b((t,e,r)=>{if(t.start===void 0){throw new Error("start should have been set during first phase")}if(t.end===void 0){throw new Error("end should have been set during first phase")}if(t.start>t.end){throw new Error(`Block start ${t.start} is greater than block end ${t.end}.`)}if(t.end+1<=e*r){return[t,void 0]}const a=e*r-1;const o=e*r;return[{start:t.start,end:a,label:t.label,bits:a-t.start},{start:o,end:t.end,label:t.label,bits:t.end-o}]},"getNextFittingBlock");var D={parser:{yy:void 0},parse:b(async t=>{var e;const r=await h("packet",t);const a=(e=D.parser)===null||e===void 0?void 0:e.yy;if(!(a instanceof v)){throw new Error("parser.parser?.yy was not a PacketDB. This is due to a bug within Mermaid, please report this issue at https://github.com/mermaid-js/mermaid/issues.")}g.debug(r);m(r,a)},"parse")};var Y=b((t,e,r,a)=>{const o=a.db;const i=o.getConfig();const{rowHeight:n,paddingY:s,bitWidth:c,bitsPerRow:l}=i;const _=o.getPacket();const d=o.getDiagramTitle();const b=n+s;const k=b*(_.length+1)-(d?0:n);const g=c*l+2;const h=p(e);h.attr("viewbox",`0 0 ${g} ${k}`);u(h,k,g,i.useMaxWidth);for(const[t,e]of _.entries()){x(h,e,t,i)}h.append("text").text(d).attr("x",g/2).attr("y",k-b/2).attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","packetTitle")},"draw");var x=b((t,e,r,{rowHeight:a,paddingX:o,paddingY:i,bitWidth:n,bitsPerRow:s,showBits:c})=>{const l=t.append("g");const _=r*(a+i)+i;for(const t of e){let e=t.start%s*n+1,r=(t.end-t.start+1)*n-o;l.append("rect").attr("x",e).attr("y",_).attr("width",r).attr("height",a).attr("class","packetBlock");l.append("text").attr("x",e+r/2).attr("y",_+a/2).attr("class","packetLabel").attr("dominant-baseline","middle").attr("text-anchor","middle").text(t.label);if(!c){continue}let i=t.end===t.start,d=_-2;l.append("text").attr("x",e+(i?r/2:0)).attr("y",d).attr("class","packetByte start").attr("dominant-baseline","auto").attr("text-anchor",i?"middle":"start").text(t.start);i||l.append("text").attr("x",e+r).attr("y",d).attr("class","packetByte end").attr("dominant-baseline","auto").attr("text-anchor","end").text(t.end)}},"drawWord");var P={draw:Y};var J={byteFontSize:"10px",startByteColor:"black",endByteColor:"black",labelColor:"black",labelFontSize:"12px",titleColor:"black",titleFontSize:"14px",blockStrokeColor:"black",blockStrokeWidth:"1",blockFillColor:"#efefef"};var R=b(({packet:t}={})=>{const e=c(J,t);return`\n\t.packetByte {\n\t\tfont-size: ${e.byteFontSize};\n\t}\n\t.packetByte.start {\n\t\tfill: ${e.startByteColor};\n\t}\n\t.packetByte.end {\n\t\tfill: ${e.endByteColor};\n\t}\n\t.packetLabel {\n\t\tfill: ${e.labelColor};\n\t\tfont-size: ${e.labelFontSize};\n\t}\n\t.packetTitle {\n\t\tfill: ${e.titleColor};\n\t\tfont-size: ${e.titleFontSize};\n\t}\n\t.packetBlock {\n\t\tstroke: ${e.blockStrokeColor};\n\t\tstroke-width: ${e.blockStrokeWidth};\n\t\tfill: ${e.blockFillColor};\n\t}\n\t`},"styles");var y={parser:D,get db(){return new v},renderer:P,styles:R};var S={diagram:y};__bbb.S=S}).call(this)